version: '3.8'

services:
  database:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
  migrate:
    build:
      context: .
      dockerfile: Dockerfile.alembic
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@database:5432/postgres
    command: >
      sh -c "pg_isready -h database -p 5432 -U postgres -t 60 &&
             alembic upgrade head"
    depends_on:
      database:
        condition: service_healthy
    restart: "no"
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    volumes:
      - .:/app:delegated
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
    depends_on:
      migrate:
        condition: service_completed_successfully
    command: ["uv", "run", "fastapi", "dev", "app/main.py", "--port", "80", "--host", "0.0.0.0"]

volumes:
  postgres_data: